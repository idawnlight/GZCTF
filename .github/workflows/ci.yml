name: Build & Publish Image

on:
  push:
    branches: [ "develop", "ci-test*", "sus" ]
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: GZCTF

    steps:
      - uses: actions/checkout@v3

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8

      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: dotnet build "CTFServer.csproj" -c Release -o build

      - run: dotnet publish "CTFServer.csproj" -c Release -o publish/linux/amd64 -r linux-x64 --no-self-contained /p:PublishReadyToRun=true /p:UseNpm=true
        env:
          VITE_APP_BUILD_TIMESTAMP: ${{ steps.time.outputs.time }}
          VITE_APP_GIT_SHA: ${{ github.sha }}
          VITE_APP_GIT_NAME: ${{ github.ref_name }}

      - run: dotnet publish "CTFServer.csproj" -c Release -o publish/linux/arm64 -r linux-arm64 --no-self-contained /p:PublishReadyToRun=true /p:UseNpm=true
        env:
          VITE_APP_BUILD_TIMESTAMP: ${{ steps.time.outputs.time }}
          VITE_APP_GIT_SHA: ${{ github.sha }}
          VITE_APP_GIT_NAME: ${{ github.ref_name }}

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.0.0

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2.0.0
      #   with:
      #     username: gztime
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker Metadata action
        uses: docker/metadata-action@v4.0.1
        id: meta
        with:
          images: |
            ghcr.io/${{ github.actor }}/gzctf
          tags: |
            latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=ref,event=branch
            type=semver,pattern={{raw}}
            type=sha,enable=true,priority=100,prefix=,suffix=,format=short

      - name: Publish Image
        uses: docker/build-push-action@v3
        with:
          context: ./GZCTF
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          push: true

      # - name: Prune old packages
      #   uses: vlaurin/action-ghcr-prune@v0.4.0
      #   with:
      #     token: ${{ secrets.PACKAGE_TOKEN }}
      #     container: "gzctf/gzctf"
      #     dry-run: false
      #     tag-regex: ^[0-9a-f]{6,40}
      #     keep-tags: |
      #       latest
      #       main
      #       develop
      #     keep-tags-regexes:
      #       ^v(.)*
      #     keep-last: 5
      #     untagged: true
